# TODO List for Form

    ## Invoice
    - [ ] Create invoice template
    - [ ] Add customer details section
    - [ ] Implement tax calculation
    - [ ] Test invoice generation

    ## Order
    - [ ] Design order form
    - [ ] Add product selection dropdown
    - [ ] Implement order validation
    - [ ] Test order submission process

    ## Project Creation
    - [x] Define project creation workflow
    - [x] Add project metadata fields
    - [x] Implement project save functionality
    - [x] Test project creation end-to-end

    ## Testing
    - [ ] Write unit tests for invoice module
    - [ ] Write unit tests for order module
    - [ ] Write unit tests for project creation module
    - [ ] Perform integration testing

    ## Frontend Page 3 Actions
    - [x] Implement "Order -> Pay" functionality
    - [x] Implement "Order and Register -> Pay" functionality
    - [x] Add "Send Email to Self" feature without placing an order
    - [x] Test "Order -> Pay" action
    - [ ] Test "Order and Register -> Pay" action
    - [x] Test "Send Email to Self" feature

# Test Cases for TODO List

    ## Frontend Page 3 Actions
    - [x] Test "Order -> Pay" functionality
        - Verify that the "Order -> Pay" button is visible and clickable.
        - Ensure that clicking the button transitions the user to the payment page.
        - Validate that the correct order details are passed to the payment page.
        - Simulate a successful payment and confirm the order status is updated.

    - [ ] Test "Order and Register -> Pay" functionality
        - Check that the "Order and Register -> Pay" button is displayed correctly.
        - Confirm that clicking the button initiates both order creation and user registration.
        - Validate that the user is redirected to the payment page with the correct details.
        - Simulate a successful payment and verify that both the order and user account are created.

    - [ ] Test "Send Email to Self" feature
        - Ensure the "Send Email to Self" button is visible and functional.
        - Verify that clicking the button opens an email input dialog.
        - Test that entering a valid email address sends the email successfully.
        - Confirm that no order is placed when using this feature.
        - Validate error handling for invalid email addresses or network issues.

    #Request quote kedvezmény


    #Project
        -[ ] project indító gomb a szerkesztés oldalon


- [ ] description a functions mellé


## megrendelés 
- [x] # kosár 50%-át kell kifizetni számlával
- [x] # fizetési mod választása / kosár fordítása
- [x] # Árajánlat PDF rendberakása
- [ ] # Éresítési email Email formázása(küldjön tamásnak)
- [x] # +1 lépés a kosár után ahol a fizetési mód és többi adatokat szerkesztketi és látja

##quotation form 1 page
- [x] # ne legyen közelező a "Company address"
#order
- [x] # bankártyás fizetés (Stripe-val)/utalásal

- [x] # Sikeres oldal/köszönöm


- [ ] árajánlatban 50% összeg résznél


- [ ] cart/summary/ oldalon

- [x] végösszeg helyet Előleg összeg

- [x] abort átszerkeszteni szebre

- [x] Áfa mindenhol, nettó és bruttó összesítés

- [ ] vissza gomb a kosárhoz a megrendelés oldalról

- [ ] céges adatok a fizetés mód. oldalon

- [ ] A projekt leírása után dinamikus leirás 

- [ ] projekt oldalon a Request quote oldalon a quote nevet használja

- [ ] quote oldalon a project generálás oldalon név automatikusan töltse

- [ ] Project goal/project oldalra huzza be automatikusan az árajánlatból

- [ ] kerdoiv magyaritása és adatok importálása a projectből dinamikusan
